# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.platform-darwin atom-workspace atom-text-editor:not(.mini)':
  'cmd-up': 'ctrl-dir-scroll:scroll-up'
  'cmd-down': 'ctrl-dir-scroll:scroll-down'
  'ctrl-alt-up': 'native!'

'.platform-darwin':
  'ctrl-shift-p': 'project-manager:list-projects'
  'cmd-shift-k': 'tabs:keep-preview-tab'

'atom-text-editor':
  'alt-b': 'native!'
  'alt-h': 'native!'
  'home': 'unset!'
  'end': 'unset!'
  'ctrl-space': 'autocomplete-plus:activate'
  'ctrl-shift-space': 'autocomplete:toggle'

'atom-workspace':
  'alt-cmd-left': 'last-cursor-position:previous'
  'alt-cmd-right': 'last-cursor-position:next'
  'alt-down': 'ensime:go-to-definition'

'atom-workspace atom-text-editor':
  'ctrl-alt-o': 'unset!'

'body':
  'home': 'core:move-to-top'
  'end': 'core:move-to-bottom'
